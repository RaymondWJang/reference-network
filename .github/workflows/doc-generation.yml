name: Generate Documentation

on:
  push:
    branches:
      - main  # or master, depending on your default branch

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false  # This is necessary for JamesIves/github-pages-deploy-action to work

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  # Set up the Python version for the runner

      #----------------------------------------------
      #       load cached Poetry installation
      #----------------------------------------------
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local # the path depends on the OS
          key: poetry-0 # increment to reset cache

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Generate Documentation
        run: |
          poetry run pdoc --html --force --output-dir ./docs reference_network
          # Use pdoc to generate your documentation

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: main  # The branch the action should deploy to.
          folder: docs  # The folder the action should deploy.
